/** 
 * Copyright (c) 2014-2017 by the respective copyright holders.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package
/*
 * generated by Xtext
 */
org.eclipse.smarthome.model.persistence

import org.eclipse.smarthome.model.persistence.scoping.PersistenceGlobalScopeProvider
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IGenerator.NullGenerator
import org.eclipse.xtext.linking.lazy.LazyURIEncoder
import org.eclipse.xtext.scoping.IGlobalScopeProvider
import com.google.inject.Binder
import com.google.inject.name.Names

/** 
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
class PersistenceRuntimeModule extends org.eclipse.smarthome.model.persistence.AbstractPersistenceRuntimeModule {
    override Class<? extends IGlobalScopeProvider> bindIGlobalScopeProvider() {
        return PersistenceGlobalScopeProvider
    }

    override Class<? extends IGenerator> bindIGenerator() {
        return NullGenerator
    }

    override void configureUseIndexFragmentsForLazyLinking(Binder binder) {
        binder.bind(Boolean.TYPE).annotatedWith(Names.named(LazyURIEncoder.USE_INDEXED_FRAGMENTS_BINDING)).toInstance(
            Boolean.FALSE)
    }
}
